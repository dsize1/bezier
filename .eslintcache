[{"D:\\前端\\react基础架构\\bezier\\src\\index.tsx":"1","D:\\前端\\react基础架构\\bezier\\src\\reportWebVitals.ts":"2","D:\\前端\\react基础架构\\bezier\\src\\App.tsx":"3","D:\\前端\\react基础架构\\bezier\\src\\components\\ControlPoints\\index.tsx":"4","D:\\前端\\react基础架构\\bezier\\src\\models\\controlPoints.ts":"5","D:\\前端\\react基础架构\\bezier\\src\\components\\Stage\\index.tsx":"6","D:\\前端\\react基础架构\\bezier\\src\\utils\\index.ts":"7","D:\\前端\\react基础架构\\bezier\\src\\utils\\toFixed.ts":"8","D:\\前端\\react基础架构\\bezier\\src\\components\\ControlPoints\\InputRange.tsx":"9","D:\\前端\\react基础架构\\bezier\\src\\components\\Stage\\contants.ts":"10","D:\\前端\\react基础架构\\bezier\\src\\components\\Stage\\draws.ts":"11","D:\\前端\\react基础架构\\bezier\\src\\utils\\calculateBezier.ts":"12","D:\\前端\\react基础架构\\bezier\\src\\utils\\getStyleCls.ts":"13","D:\\前端\\react基础架构\\bezier\\src\\models\\controlPlayer.ts":"14","D:\\前端\\react基础架构\\bezier\\src\\utils\\p2CubicBezier.ts":"15","D:\\前端\\react基础架构\\bezier\\src\\components\\Compare\\index.tsx":"16","D:\\前端\\react基础架构\\bezier\\src\\hooks\\useResize.ts":"17","D:\\前端\\react基础架构\\bezier\\src\\hooks\\useMulticast.ts":"18","D:\\前端\\react基础架构\\bezier\\src\\utils\\getMotion$.ts":"19","D:\\前端\\react基础架构\\bezier\\src\\utils\\getCtxByStage.ts":"20","D:\\前端\\react基础架构\\bezier\\src\\utils\\drawPoint.ts":"21","D:\\前端\\react基础架构\\bezier\\src\\components\\Display\\index.tsx":"22","D:\\前端\\react基础架构\\bezier\\src\\Canvas\\index.ts":"23","D:\\前端\\react基础架构\\bezier\\src\\Canvas\\Shape\\Circle.ts":"24","D:\\前端\\react基础架构\\bezier\\src\\Canvas\\Shape\\Rectangle.ts":"25","D:\\前端\\react基础架构\\bezier\\src\\Canvas\\utils.ts":"26"},{"size":500,"mtime":1607750933546,"results":"27","hashOfConfig":"28"},{"size":425,"mtime":1607745288397,"results":"29","hashOfConfig":"28"},{"size":790,"mtime":1608820477824,"results":"30","hashOfConfig":"28"},{"size":5905,"mtime":1608649875270,"results":"31","hashOfConfig":"28"},{"size":539,"mtime":1608649728969,"results":"32","hashOfConfig":"28"},{"size":2809,"mtime":1609257336242,"results":"33","hashOfConfig":"28"},{"size":723,"mtime":1609038944982,"results":"34","hashOfConfig":"28"},{"size":359,"mtime":1607757739271,"results":"35","hashOfConfig":"28"},{"size":1009,"mtime":1608044940771,"results":"36","hashOfConfig":"28"},{"size":430,"mtime":1608649541837,"results":"37","hashOfConfig":"28"},{"size":4153,"mtime":1608649993050,"results":"38","hashOfConfig":"28"},{"size":1055,"mtime":1608737060428,"results":"39","hashOfConfig":"28"},{"size":476,"mtime":1608047674449,"results":"40","hashOfConfig":"28"},{"size":429,"mtime":1608649868864,"results":"41","hashOfConfig":"28"},{"size":450,"mtime":1608382627893,"results":"42","hashOfConfig":"28"},{"size":1247,"mtime":1608649959108,"results":"43","hashOfConfig":"28"},{"size":1031,"mtime":1608990596266,"results":"44","hashOfConfig":"28"},{"size":1469,"mtime":1608652027482,"results":"45","hashOfConfig":"28"},{"size":2952,"mtime":1609859192337,"results":"46","hashOfConfig":"28"},{"size":202,"mtime":1608479298543,"results":"47","hashOfConfig":"28"},{"size":390,"mtime":1608479563649,"results":"48","hashOfConfig":"28"},{"size":3058,"mtime":1609860057850,"results":"49","hashOfConfig":"28"},{"size":4208,"mtime":1609948091445,"results":"50","hashOfConfig":"28"},{"size":1754,"mtime":1609170014985,"results":"51","hashOfConfig":"28"},{"size":1861,"mtime":1609170045435,"results":"52","hashOfConfig":"28"},{"size":630,"mtime":1609948060914,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"j32ste",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\前端\\react基础架构\\bezier\\src\\index.tsx",[],["112","113"],"D:\\前端\\react基础架构\\bezier\\src\\reportWebVitals.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\App.tsx",[],"D:\\前端\\react基础架构\\bezier\\src\\components\\ControlPoints\\index.tsx",["114"],"import React, { useMemo } from 'react';\r\nimport { Form, Button, Select, Row, Col } from 'antd';\r\nimport { CopyrightTwoTone } from '@ant-design/icons';\r\nimport InputRange from './InputRange';\r\nimport _omit from 'lodash/omit';\r\nimport _split from 'lodash/split';\r\nimport _has from 'lodash/has';\r\nimport utils from '../../utils'\r\nimport { IControlPoints } from '../../models/controlPoints';\r\nimport useControlPoints from '../../models/controlPoints'\r\nimport useControlPlayer from '../../models/controlPlayer'\r\n\r\nconst libaray = [\r\n  { label: 'ease', value: '.25,.1,.25,1' },\r\n  { label: 'linear', value: '0,0,1,1' },\r\n  { label: 'ease-in', value: '.42,0,1,1' },\r\n  { label: 'ease-out', value: '0,0,.58,1' },\r\n  { label: 'ease-in-out', value: '.42,0,.58,1' }\r\n]\r\n\r\ninterface IForm extends IControlPoints {\r\n  libaray: string | undefined;\r\n  duration: number;\r\n}\r\n\r\nfunction ControlPoints(props: Partial<{ className: string }>) {\r\n  const { className } = props;\r\n\r\n  const { initialPoints, points, setPoints } = useControlPoints();\r\n  const { initialPlayer, player, setPlayer } = useControlPlayer();\r\n  const [form] = Form.useForm<IForm>();\r\n  const initialFormValues = useMemo(() => {\r\n    return {\r\n      libaray: undefined,\r\n      ...initialPoints,\r\n    }\r\n  }, [initialPoints])\r\n\r\n  const onFinish = (values: IForm, run = true) => {\r\n    if (!player.run) {\r\n      const nextPoints = _omit(values, ['libaray']);\r\n      setPoints(nextPoints);\r\n      setPlayer({ run });\r\n    }\r\n  }\r\n\r\n  const onReset = () => {\r\n    const formValues = {\r\n      ...initialPoints,\r\n      libaray: undefined\r\n    };\r\n    form.setFieldsValue(formValues);\r\n    onFinish(formValues, false);\r\n  }\r\n\r\n  const onFormChange = (changedValues: Partial<IForm>, allValues: IForm) => {\r\n    if (_has(changedValues, 'libaray')) {\r\n      if (changedValues.libaray === undefined) {\r\n        onReset();\r\n      } else {\r\n        const [cp1x, cp1y, cp2x, cp2y] = _split(changedValues.libaray, ',');\r\n        const formValues = {\r\n          duration: allValues.duration,\r\n          libaray: changedValues.libaray,\r\n          cp1x: Number(cp1x),\r\n          cp1y: Number(cp1y),\r\n          cp2x: Number(cp2x),\r\n          cp2y: Number(cp2y)\r\n        };\r\n        form.setFieldsValue(formValues);\r\n        onFinish(formValues, false);\r\n      }\r\n    } else {\r\n      const formValues = {\r\n        ...allValues,\r\n        libaray: undefined\r\n      };\r\n      form.setFieldsValue(formValues);\r\n      onFinish(formValues, false);\r\n    }\r\n  }\r\n\r\n  const bezierCurve = useMemo(() => {\r\n    return utils.p2CubicBezier(points);\r\n  }, [points]);\r\n\r\n  return (\r\n    <Form\r\n      className={className}\r\n      form={form} \r\n      initialValues={initialFormValues} \r\n      name=\"control-points\" \r\n      onFinish={onFinish} \r\n      onValuesChange={onFormChange}\r\n      labelCol={{ span: 8 }}\r\n      wrapperCol={{ span: 16 }}\r\n    >\r\n      <Row justify=\"start\" >\r\n        <Col span={10}>\r\n          <Form.Item\r\n            name=\"cp1x\"\r\n            label={\r\n              <span>\r\n                控制点X1\r\n                <CopyrightTwoTone twoToneColor=\"#52c41a\" style={{marginLeft: 6}} />\r\n              </span>\r\n            }\r\n            rules={[{ required: true }]}\r\n          >\r\n            <InputRange min={0} max={1} step={0.01} />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col span={10}>\r\n          <Form.Item\r\n            name=\"cp1y\"\r\n            label={\r\n              <span>\r\n                控制点Y1\r\n                <CopyrightTwoTone twoToneColor=\"#52c41a\" style={{marginLeft: 6}} />\r\n              </span>\r\n            }\r\n            rules={[{ required: true }]}\r\n          >\r\n            <InputRange min={-1} max={2} step={0.01} />\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n      <Row justify=\"start\" >\r\n        <Col span={10}>\r\n          <Form.Item\r\n            name=\"cp2x\"\r\n            label={\r\n              <span>\r\n                控制点X2\r\n                <CopyrightTwoTone twoToneColor=\"#ff5722\" style={{marginLeft: 6}} />\r\n              </span>\r\n            }\r\n            rules={[{ required: true }]}\r\n          >\r\n            <InputRange min={0} max={1} step={0.01} />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col span={10}>\r\n          <Form.Item\r\n            name=\"cp2y\"\r\n            label={\r\n              <span>\r\n                控制定Y2\r\n                <CopyrightTwoTone twoToneColor=\"#ff5722\" style={{marginLeft: 6}} />\r\n              </span>\r\n            }\r\n            rules={[{ required: true }]}\r\n          >\r\n            <InputRange min={-1} max={2} step={0.01} />\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n      <Row justify=\"start\" >\r\n        <Col span={10}>\r\n          <Form.Item\r\n            name=\"libaray\"\r\n            label=\"缓动函数\"\r\n          >\r\n            <Select\r\n              size=\"small\"\r\n              style={{ width: 200 }}\r\n              options={libaray}\r\n              optionLabelProp=\"label\"\r\n              allowClear\r\n            />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col span={10}>\r\n          <Form.Item\r\n            name=\"duration\"\r\n            label=\"时间\"\r\n            rules={[{ required: true }]}\r\n          >\r\n            <InputRange min={initialPoints.duration} max={10000} step={500} />\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n      <Row justify=\"start\" >        \r\n        <Col span={10}>\r\n          <Form.Item label=\"贝塞尔曲线\">\r\n            <span>{bezierCurve}</span>\r\n          </Form.Item>\r\n        </Col>\r\n        <Col span={10} offset={4} >\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              开始\r\n            </Button>\r\n            <Button style={{ marginLeft: 12 }} htmlType=\"button\" onClick={onReset}>\r\n              重置\r\n            </Button>\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default ControlPoints;\r\n","D:\\前端\\react基础架构\\bezier\\src\\models\\controlPoints.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\components\\Stage\\index.tsx",["115","116"],"import React, { useMemo, useRef } from 'react';\r\nimport { of, concat } from 'rxjs';\r\nimport { tap, map, filter, withLatestFrom } from 'rxjs/operators';\r\nimport useResize from '../../hooks/useResize';\r\nimport useControlPoints from '../../models/controlPoints';\r\nimport useControlPlayer from '../../models/controlPlayer';\r\nimport useMulticast from '../../hooks/useMulticast';\r\nimport { drawCoordinates, drawBezierCurvePoint, getPoints$ } from './draws';\r\nimport { PADDING } from './contants';\r\nimport { IStageOptions, IDrawCoordinatesOptions, IDrawBezierCurveOptions } from './types';\r\n\r\nfunction Stage (props: Partial<{ className: string }>) {\r\n  const { className } = props;\r\n\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n\r\n  const { width, height } = useResize(containerRef.current);\r\n\r\n  const { points: controlPonitsOptions } = useControlPoints();\r\n  const { player: controlPlayer, setPlayer: setControlPonitsPlayer } = useControlPlayer();\r\n\r\n  const stageOptions: IStageOptions = useMemo(() => {\r\n    const _width = Math.floor(width);\r\n    const _height = Math.floor(height);\r\n    const axisXLength = Math.floor(_width - (2 * PADDING));\r\n    const axisYLength = Math.floor((1 / 3)  * (_height - (2 * PADDING)));\r\n    const originX = PADDING;\r\n    const originY = 2 * axisYLength + PADDING;\r\n\r\n    return {\r\n      x0: originX,\r\n      y0: originY,\r\n      xLen: axisXLength,\r\n      yLen: axisYLength,\r\n      stageW: _width,\r\n      stageH: _height,\r\n      stage: canvasRef\r\n    };\r\n  }, [width, height]);\r\n\r\n  const drawBezierCurve = ([stageOptions, controlPonits, controlPlayer]: IDrawBezierCurveOptions) => {\r\n    console.log('ddd', controlPlayer);\r\n    const clear$ = of<IDrawCoordinatesOptions>([stageOptions, controlPonits]).pipe(\r\n      tap(drawCoordinates)\r\n    );\r\n    const drawPoints$ = getPoints$(stageOptions, controlPonits, controlPlayer).pipe(\r\n      tap(drawBezierCurvePoint)\r\n    );\r\n    const draw$ = concat(clear$, drawPoints$);\r\n    draw$.subscribe({\r\n      complete: () => {\r\n        setControlPonitsPlayer({ ...controlPlayer, run: false });\r\n      },\r\n      error: () => {\r\n        setControlPonitsPlayer({ ...controlPlayer, run: false });\r\n      }\r\n    });\r\n  }\r\n\r\n  useMulticast<IDrawCoordinatesOptions>(\r\n    [drawCoordinates],\r\n    [stageOptions, controlPonitsOptions]\r\n  );\r\n\r\n  useMulticast<IDrawBezierCurveOptions>(\r\n    [drawBezierCurve],\r\n    [stageOptions, controlPonitsOptions, controlPlayer],\r\n    (dependency$) => {\r\n      return dependency$.pipe(\r\n        filter((dep) => dep[2].run)\r\n      );\r\n    }\r\n  );\r\n\r\n  return (\r\n    <div className={className} ref={containerRef}>\r\n      <canvas ref={canvasRef} width={stageOptions.stageW} height={stageOptions.stageH} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Stage;\r\n","D:\\前端\\react基础架构\\bezier\\src\\utils\\index.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\utils\\toFixed.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\components\\ControlPoints\\InputRange.tsx",[],"D:\\前端\\react基础架构\\bezier\\src\\components\\Stage\\contants.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\components\\Stage\\draws.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\utils\\calculateBezier.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\utils\\getStyleCls.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\models\\controlPlayer.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\utils\\p2CubicBezier.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\components\\Compare\\index.tsx",[],"D:\\前端\\react基础架构\\bezier\\src\\hooks\\useResize.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\hooks\\useMulticast.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\utils\\getMotion$.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\utils\\getCtxByStage.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\utils\\drawPoint.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\components\\Display\\index.tsx",["117","118","119","120"],"import React, { useEffect, useMemo, useRef, useState } from 'react';\r\nimport useConstant from 'use-constant';\r\nimport _isNil from 'lodash/isNil';\r\nimport { tap, filter } from 'rxjs/operators';\r\nimport utils from '../../utils';\r\nimport Canvas from '../../Canvas';\r\nimport Circle from '../../Canvas/Shape/Circle';\r\nimport Rectangle from '../../Canvas/Shape/Rectangle';\r\nimport useControlPoints from '../../models/controlPoints';\r\nimport useControlPlayer from '../../models/controlPlayer';\r\nimport useMulticast from '../../hooks/useMulticast';\r\nimport { DUE_TIME } from '../Stage/contants';\r\nimport { IDrawBallMotionOptions } from './types';\r\nimport { IPoint } from '../../types';\r\nimport styles from './display.module.css';\r\n\r\nconst getCls = utils.getStyleCls(styles);\r\n\r\nconst BALL_RADIUS = 12.5;\r\nconst BALL_BOTTOM = 756;\r\nconst BALL_TOP = 181;\r\nconst BALL_COLOR = '#d87093';\r\nconst RECT_HEIGHT = 600;\r\nconst RECT_COLOR = '#ffffff';\r\n\r\nfunction Display() {\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const canvasRef = useRef<Canvas>();\r\n  const rect = useConstant(() => new Rectangle({\r\n    x: 0,\r\n    y: 168.5,\r\n    width:\r\n    '100%',\r\n    height: RECT_HEIGHT,\r\n    fillStyle: RECT_COLOR \r\n  }));\r\n  const ball = useConstant(() => new Circle({\r\n    x: 84,\r\n    y: 756,\r\n    radius: BALL_RADIUS,\r\n    fillStyle: BALL_COLOR\r\n  }));\r\n\r\n  useEffect(() => {\r\n    if (containerRef.current) {\r\n      canvasRef.current = new Canvas(containerRef.current);\r\n      canvasRef.current.append(rect.id, rect);\r\n      canvasRef.current.append(ball.id, ball);\r\n    }\r\n    return () => {\r\n      canvasRef?.current?.destroy();\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const { points: controlPonitsOptions } = useControlPoints();\r\n  const { player: controlPlayer, setPlayer: setControlPonitsPlayer } = useControlPlayer();\r\n\r\n  const draw = (\r\n    [controlPonitsOptions, controlPlayer]: IDrawBallMotionOptions\r\n  ) => {\r\n    const x = ball.x as number;\r\n    const startY = ball.y as number;\r\n    const endY = startY === BALL_BOTTOM ? BALL_TOP : BALL_BOTTOM;\r\n    const startPoint: IPoint = [x, startY];\r\n    const endPoint: IPoint = [x, endY];\r\n    const draw$ = utils.getMotion$(\r\n      startPoint,\r\n      endPoint,\r\n      controlPonitsOptions,\r\n      DUE_TIME\r\n    );\r\n    draw$.subscribe({\r\n      next: ({ x, y }) => {\r\n        canvasRef?.current?.clear();\r\n        canvasRef?.current?.change(rect.id, {});\r\n        canvasRef?.current?.change(ball.id, { x, y });\r\n      },\r\n      complete: () => {\r\n        setControlPonitsPlayer({ ...controlPlayer, run: false });\r\n      },\r\n      error: () => {\r\n        setControlPonitsPlayer({ ...controlPlayer, run: false });\r\n      }\r\n    });\r\n  };\r\n\r\n  useMulticast<IDrawBallMotionOptions>(\r\n    [draw],\r\n    [controlPonitsOptions, controlPlayer],\r\n    (dependency$) => {\r\n      return dependency$.pipe(\r\n        filter((dep) => dep[1].run)\r\n      );\r\n    }\r\n  );\r\n\r\n  return (\r\n    <div className={getCls('container')} ref={containerRef} />\r\n  );\r\n}\r\n\r\nexport default Display;\r\n","D:\\前端\\react基础架构\\bezier\\src\\Canvas\\index.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\Canvas\\Shape\\Circle.ts",["121"],"import { v4 } from 'uuid';\r\nimport _each from 'lodash/each';\r\nimport _set from 'lodash/set';\r\nimport _isFunction from 'lodash/isFunction';\r\nimport { percent2Number } from '../utils';\r\nimport Canvas from '../index';\r\n\r\nconst TWO_PI = Math.PI * 2;\r\n\r\ninterface IInitialCircle {\r\n  x: number | string;\r\n  y: number | string;\r\n  radius: number | string;\r\n  fillStyle?: string;\r\n  drawType?: 'fill' | 'stroke';\r\n  alias?: string;\r\n}\r\nexport type ICircleState = Partial<Omit<IInitialCircle, 'alias'>>;\r\nclass Circle {\r\n  public id: string;\r\n  public alias: string;\r\n  public x: number | string;\r\n  public y: number | string;\r\n  public radius: number | string;\r\n  public fillStyle: string | undefined;\r\n  public drawType: 'fill' | 'stroke';\r\n  \r\n  static type = 'circle';\r\n\r\n  constructor({ x, y, radius, fillStyle, drawType, alias }: IInitialCircle) {\r\n    this.id = v4();\r\n    this.alias = alias || this.id;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.radius = radius;\r\n    this.fillStyle = fillStyle;\r\n    this.drawType = drawType || 'fill';\r\n  }\r\n\r\n  public setState (nextState: ICircleState) {\r\n    _each(nextState, (value, key) => {\r\n      _set(this, key, value);\r\n    });\r\n  }\r\n\r\n  public draw (canvas: Canvas) {\r\n    const { context: ctx, width, height } = canvas;\r\n    const x = percent2Number(this.x, width);\r\n    const y = percent2Number(this.y, height);\r\n    const r = percent2Number(this.radius, width);\r\n    ctx.save();\r\n    ctx.beginPath();\r\n    ctx.moveTo(x, y);\r\n    ctx.arc(x, y, r, 0, TWO_PI);\r\n    ctx.closePath();\r\n    if (this.fillStyle) {\r\n      ctx.fillStyle = this.fillStyle;\r\n    }\r\n    if (this.drawType === 'fill') {\r\n      ctx.fill();\r\n    } else {\r\n      ctx.stroke();\r\n    }\r\n    ctx.restore();\r\n  }\r\n}\r\n\r\nexport default Circle;\r\n","D:\\前端\\react基础架构\\bezier\\src\\Canvas\\Shape\\Rectangle.ts",["122"],"import { v4 } from 'uuid';\r\nimport _each from 'lodash/each';\r\nimport _set from 'lodash/set';\r\nimport _isFunction from 'lodash/isFunction';\r\nimport { percent2Number } from '../utils';\r\nimport Canvas from '../index';\r\n\r\ninterface IInitialRectangle {\r\n  x: number | string;\r\n  y: number | string;\r\n  width: number | string;\r\n  height: number | string;\r\n  fillStyle?: string;\r\n  drawType?: 'fill' | 'stroke';\r\n  alias?: string;\r\n}\r\nexport type IRectangleState = Partial<Omit<IInitialRectangle, 'alias'>>;\r\nclass Rectangle {\r\n  public id: string;\r\n  public alias: string;\r\n  public x: number | string;\r\n  public y: number | string;\r\n  public width: number | string;\r\n  public height: number | string;\r\n  public fillStyle: string | undefined;\r\n  public drawType: 'fill' | 'stroke';\r\n  \r\n  static type = 'rectangle';\r\n\r\n  constructor({ x, y, width, height, fillStyle, drawType, alias }: IInitialRectangle) {\r\n    this.id = v4();\r\n    this.alias = alias || this.id;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.fillStyle = fillStyle;\r\n    this.drawType = drawType || 'fill';\r\n  }\r\n\r\n  public setState (nextState: IRectangleState) {\r\n    _each(nextState, (value, key) => {\r\n      _set(this, key, value);\r\n    });\r\n  }\r\n\r\n  public draw (canvas: Canvas) {\r\n    const { context: ctx, width, height } = canvas;\r\n    const x = percent2Number(this.x, width);\r\n    const y = percent2Number(this.y, height);\r\n    const w = percent2Number(this.width, width);\r\n    const h = percent2Number(this.height, height);\r\n    ctx.save();\r\n    ctx.beginPath();\r\n    ctx.rect(x, y, w, h);\r\n    ctx.closePath();\r\n    if (this.fillStyle) {\r\n      ctx.fillStyle = this.fillStyle;\r\n    }\r\n    if (this.drawType === 'fill') {\r\n      ctx.fill();\r\n    } else {\r\n      ctx.stroke();\r\n    }\r\n    ctx.restore();\r\n  }\r\n}\r\n\r\nexport default Rectangle;\r\n","D:\\前端\\react基础架构\\bezier\\src\\Canvas\\utils.ts",["123","124","125","126"],{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":30,"column":11,"nodeType":"133","messageId":"134","endLine":30,"endColumn":24},{"ruleId":"131","severity":1,"message":"135","line":3,"column":15,"nodeType":"133","messageId":"134","endLine":3,"endColumn":18},{"ruleId":"131","severity":1,"message":"136","line":3,"column":28,"nodeType":"133","messageId":"134","endLine":3,"endColumn":42},{"ruleId":"131","severity":1,"message":"137","line":1,"column":28,"nodeType":"133","messageId":"134","endLine":1,"endColumn":35},{"ruleId":"131","severity":1,"message":"138","line":1,"column":45,"nodeType":"133","messageId":"134","endLine":1,"endColumn":53},{"ruleId":"131","severity":1,"message":"139","line":3,"column":8,"nodeType":"133","messageId":"134","endLine":3,"endColumn":14},{"ruleId":"131","severity":1,"message":"140","line":4,"column":10,"nodeType":"133","messageId":"134","endLine":4,"endColumn":13},{"ruleId":"131","severity":1,"message":"141","line":4,"column":8,"nodeType":"133","messageId":"134","endLine":4,"endColumn":19},{"ruleId":"131","severity":1,"message":"141","line":4,"column":8,"nodeType":"133","messageId":"134","endLine":4,"endColumn":19},{"ruleId":"131","severity":1,"message":"142","line":1,"column":10,"nodeType":"133","messageId":"134","endLine":1,"endColumn":15},{"ruleId":"131","severity":1,"message":"143","line":1,"column":17,"nodeType":"133","messageId":"134","endLine":1,"endColumn":40},{"ruleId":"131","severity":1,"message":"144","line":2,"column":10,"nodeType":"133","messageId":"134","endLine":2,"endColumn":14},{"ruleId":"131","severity":1,"message":"145","line":2,"column":16,"nodeType":"133","messageId":"134","endLine":2,"endColumn":25},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"@typescript-eslint/no-unused-vars","'initialPlayer' is assigned a value but never used.","Identifier","unusedVar","'map' is defined but never used.","'withLatestFrom' is defined but never used.","'useMemo' is defined but never used.","'useState' is defined but never used.","'_isNil' is defined but never used.","'tap' is defined but never used.","'_isFunction' is defined but never used.","'timer' is defined but never used.","'animationFrameScheduler' is defined but never used.","'scan' is defined but never used.","'takeWhile' is defined but never used.","no-global-assign","no-unsafe-negation"]