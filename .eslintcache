[{"D:\\前端\\react基础架构\\bezier\\src\\index.tsx":"1","D:\\前端\\react基础架构\\bezier\\src\\reportWebVitals.ts":"2","D:\\前端\\react基础架构\\bezier\\src\\App.tsx":"3","D:\\前端\\react基础架构\\bezier\\src\\components\\ControlPoints\\index.tsx":"4","D:\\前端\\react基础架构\\bezier\\src\\models\\controlPoints.ts":"5","D:\\前端\\react基础架构\\bezier\\src\\components\\Stage\\index.tsx":"6","D:\\前端\\react基础架构\\bezier\\src\\utils\\index.ts":"7","D:\\前端\\react基础架构\\bezier\\src\\utils\\toFixed.ts":"8","D:\\前端\\react基础架构\\bezier\\src\\components\\ControlPoints\\InputRange.tsx":"9","D:\\前端\\react基础架构\\bezier\\src\\components\\Stage\\contants.ts":"10","D:\\前端\\react基础架构\\bezier\\src\\components\\Stage\\draws.ts":"11","D:\\前端\\react基础架构\\bezier\\src\\utils\\calculateBezier.ts":"12","D:\\前端\\react基础架构\\bezier\\src\\utils\\getStyleCls.ts":"13","D:\\前端\\react基础架构\\bezier\\src\\models\\controlPlayer.ts":"14","D:\\前端\\react基础架构\\bezier\\src\\utils\\p2CubicBezier.ts":"15","D:\\前端\\react基础架构\\bezier\\src\\components\\Compare\\index.tsx":"16","D:\\前端\\react基础架构\\bezier\\src\\hooks\\useResize.ts":"17","D:\\前端\\react基础架构\\bezier\\src\\hooks\\useMulticast.ts":"18","D:\\前端\\react基础架构\\bezier\\src\\utils\\getMotion$.ts":"19","D:\\前端\\react基础架构\\bezier\\src\\utils\\getCtxByStage.ts":"20","D:\\前端\\react基础架构\\bezier\\src\\utils\\drawPoint.ts":"21","D:\\前端\\react基础架构\\bezier\\src\\components\\Display\\index.tsx":"22","D:\\前端\\react基础架构\\bezier\\src\\Canvas\\index.ts":"23","D:\\前端\\react基础架构\\bezier\\src\\Canvas\\Shape\\Circle.ts":"24","D:\\前端\\react基础架构\\bezier\\src\\Canvas\\Shape\\Rectangle.ts":"25","D:\\前端\\react基础架构\\bezier\\src\\Canvas\\utils.ts":"26"},{"size":500,"mtime":1607750933546,"results":"27","hashOfConfig":"28"},{"size":425,"mtime":1607745288397,"results":"29","hashOfConfig":"28"},{"size":790,"mtime":1608820477824,"results":"30","hashOfConfig":"28"},{"size":5905,"mtime":1608649875270,"results":"31","hashOfConfig":"28"},{"size":539,"mtime":1608649728969,"results":"32","hashOfConfig":"28"},{"size":2809,"mtime":1609257336242,"results":"33","hashOfConfig":"28"},{"size":723,"mtime":1609038944982,"results":"34","hashOfConfig":"28"},{"size":359,"mtime":1607757739271,"results":"35","hashOfConfig":"28"},{"size":1009,"mtime":1608044940771,"results":"36","hashOfConfig":"28"},{"size":430,"mtime":1608649541837,"results":"37","hashOfConfig":"28"},{"size":4153,"mtime":1608649993050,"results":"38","hashOfConfig":"28"},{"size":1055,"mtime":1608737060428,"results":"39","hashOfConfig":"28"},{"size":476,"mtime":1608047674449,"results":"40","hashOfConfig":"28"},{"size":429,"mtime":1608649868864,"results":"41","hashOfConfig":"28"},{"size":450,"mtime":1608382627893,"results":"42","hashOfConfig":"28"},{"size":1247,"mtime":1608649959108,"results":"43","hashOfConfig":"28"},{"size":1031,"mtime":1608990596266,"results":"44","hashOfConfig":"28"},{"size":1469,"mtime":1608652027482,"results":"45","hashOfConfig":"28"},{"size":2934,"mtime":1608648780842,"results":"46","hashOfConfig":"28"},{"size":202,"mtime":1608479298543,"results":"47","hashOfConfig":"28"},{"size":390,"mtime":1608479563649,"results":"48","hashOfConfig":"28"},{"size":1697,"mtime":1609252563206,"results":"49","hashOfConfig":"28"},{"size":3390,"mtime":1609166970631,"results":"50","hashOfConfig":"28"},{"size":1754,"mtime":1609170014985,"results":"51","hashOfConfig":"28"},{"size":1861,"mtime":1609170045435,"results":"52","hashOfConfig":"28"},{"size":370,"mtime":1609082822649,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"j32ste",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"D:\\前端\\react基础架构\\bezier\\src\\index.tsx",[],["110","111"],"D:\\前端\\react基础架构\\bezier\\src\\reportWebVitals.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\App.tsx",[],"D:\\前端\\react基础架构\\bezier\\src\\components\\ControlPoints\\index.tsx",["112"],"import React, { useMemo } from 'react';\r\nimport { Form, Button, Select, Row, Col } from 'antd';\r\nimport { CopyrightTwoTone } from '@ant-design/icons';\r\nimport InputRange from './InputRange';\r\nimport _omit from 'lodash/omit';\r\nimport _split from 'lodash/split';\r\nimport _has from 'lodash/has';\r\nimport utils from '../../utils'\r\nimport { IControlPoints } from '../../models/controlPoints';\r\nimport useControlPoints from '../../models/controlPoints'\r\nimport useControlPlayer from '../../models/controlPlayer'\r\n\r\nconst libaray = [\r\n  { label: 'ease', value: '.25,.1,.25,1' },\r\n  { label: 'linear', value: '0,0,1,1' },\r\n  { label: 'ease-in', value: '.42,0,1,1' },\r\n  { label: 'ease-out', value: '0,0,.58,1' },\r\n  { label: 'ease-in-out', value: '.42,0,.58,1' }\r\n]\r\n\r\ninterface IForm extends IControlPoints {\r\n  libaray: string | undefined;\r\n  duration: number;\r\n}\r\n\r\nfunction ControlPoints(props: Partial<{ className: string }>) {\r\n  const { className } = props;\r\n\r\n  const { initialPoints, points, setPoints } = useControlPoints();\r\n  const { initialPlayer, player, setPlayer } = useControlPlayer();\r\n  const [form] = Form.useForm<IForm>();\r\n  const initialFormValues = useMemo(() => {\r\n    return {\r\n      libaray: undefined,\r\n      ...initialPoints,\r\n    }\r\n  }, [initialPoints])\r\n\r\n  const onFinish = (values: IForm, run = true) => {\r\n    if (!player.run) {\r\n      const nextPoints = _omit(values, ['libaray']);\r\n      setPoints(nextPoints);\r\n      setPlayer({ run });\r\n    }\r\n  }\r\n\r\n  const onReset = () => {\r\n    const formValues = {\r\n      ...initialPoints,\r\n      libaray: undefined\r\n    };\r\n    form.setFieldsValue(formValues);\r\n    onFinish(formValues, false);\r\n  }\r\n\r\n  const onFormChange = (changedValues: Partial<IForm>, allValues: IForm) => {\r\n    if (_has(changedValues, 'libaray')) {\r\n      if (changedValues.libaray === undefined) {\r\n        onReset();\r\n      } else {\r\n        const [cp1x, cp1y, cp2x, cp2y] = _split(changedValues.libaray, ',');\r\n        const formValues = {\r\n          duration: allValues.duration,\r\n          libaray: changedValues.libaray,\r\n          cp1x: Number(cp1x),\r\n          cp1y: Number(cp1y),\r\n          cp2x: Number(cp2x),\r\n          cp2y: Number(cp2y)\r\n        };\r\n        form.setFieldsValue(formValues);\r\n        onFinish(formValues, false);\r\n      }\r\n    } else {\r\n      const formValues = {\r\n        ...allValues,\r\n        libaray: undefined\r\n      };\r\n      form.setFieldsValue(formValues);\r\n      onFinish(formValues, false);\r\n    }\r\n  }\r\n\r\n  const bezierCurve = useMemo(() => {\r\n    return utils.p2CubicBezier(points);\r\n  }, [points]);\r\n\r\n  return (\r\n    <Form\r\n      className={className}\r\n      form={form} \r\n      initialValues={initialFormValues} \r\n      name=\"control-points\" \r\n      onFinish={onFinish} \r\n      onValuesChange={onFormChange}\r\n      labelCol={{ span: 8 }}\r\n      wrapperCol={{ span: 16 }}\r\n    >\r\n      <Row justify=\"start\" >\r\n        <Col span={10}>\r\n          <Form.Item\r\n            name=\"cp1x\"\r\n            label={\r\n              <span>\r\n                控制点X1\r\n                <CopyrightTwoTone twoToneColor=\"#52c41a\" style={{marginLeft: 6}} />\r\n              </span>\r\n            }\r\n            rules={[{ required: true }]}\r\n          >\r\n            <InputRange min={0} max={1} step={0.01} />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col span={10}>\r\n          <Form.Item\r\n            name=\"cp1y\"\r\n            label={\r\n              <span>\r\n                控制点Y1\r\n                <CopyrightTwoTone twoToneColor=\"#52c41a\" style={{marginLeft: 6}} />\r\n              </span>\r\n            }\r\n            rules={[{ required: true }]}\r\n          >\r\n            <InputRange min={-1} max={2} step={0.01} />\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n      <Row justify=\"start\" >\r\n        <Col span={10}>\r\n          <Form.Item\r\n            name=\"cp2x\"\r\n            label={\r\n              <span>\r\n                控制点X2\r\n                <CopyrightTwoTone twoToneColor=\"#ff5722\" style={{marginLeft: 6}} />\r\n              </span>\r\n            }\r\n            rules={[{ required: true }]}\r\n          >\r\n            <InputRange min={0} max={1} step={0.01} />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col span={10}>\r\n          <Form.Item\r\n            name=\"cp2y\"\r\n            label={\r\n              <span>\r\n                控制定Y2\r\n                <CopyrightTwoTone twoToneColor=\"#ff5722\" style={{marginLeft: 6}} />\r\n              </span>\r\n            }\r\n            rules={[{ required: true }]}\r\n          >\r\n            <InputRange min={-1} max={2} step={0.01} />\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n      <Row justify=\"start\" >\r\n        <Col span={10}>\r\n          <Form.Item\r\n            name=\"libaray\"\r\n            label=\"缓动函数\"\r\n          >\r\n            <Select\r\n              size=\"small\"\r\n              style={{ width: 200 }}\r\n              options={libaray}\r\n              optionLabelProp=\"label\"\r\n              allowClear\r\n            />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col span={10}>\r\n          <Form.Item\r\n            name=\"duration\"\r\n            label=\"时间\"\r\n            rules={[{ required: true }]}\r\n          >\r\n            <InputRange min={initialPoints.duration} max={10000} step={500} />\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n      <Row justify=\"start\" >        \r\n        <Col span={10}>\r\n          <Form.Item label=\"贝塞尔曲线\">\r\n            <span>{bezierCurve}</span>\r\n          </Form.Item>\r\n        </Col>\r\n        <Col span={10} offset={4} >\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              开始\r\n            </Button>\r\n            <Button style={{ marginLeft: 12 }} htmlType=\"button\" onClick={onReset}>\r\n              重置\r\n            </Button>\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default ControlPoints;\r\n","D:\\前端\\react基础架构\\bezier\\src\\models\\controlPoints.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\components\\Stage\\index.tsx",["113","114"],"D:\\前端\\react基础架构\\bezier\\src\\utils\\index.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\utils\\toFixed.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\components\\ControlPoints\\InputRange.tsx",[],"D:\\前端\\react基础架构\\bezier\\src\\components\\Stage\\contants.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\components\\Stage\\draws.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\utils\\calculateBezier.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\utils\\getStyleCls.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\models\\controlPlayer.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\utils\\p2CubicBezier.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\components\\Compare\\index.tsx",[],"D:\\前端\\react基础架构\\bezier\\src\\hooks\\useResize.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\hooks\\useMulticast.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\utils\\getMotion$.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\utils\\getCtxByStage.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\utils\\drawPoint.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\components\\Display\\index.tsx",["115","116","117","118","119","120","121","122","123","124","125"],"D:\\前端\\react基础架构\\bezier\\src\\Canvas\\index.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\Canvas\\Shape\\Circle.ts",["126"],"import { v4 } from 'uuid';\r\nimport _each from 'lodash/each';\r\nimport _set from 'lodash/set';\r\nimport _isFunction from 'lodash/isFunction';\r\nimport { percent2Number } from '../utils';\r\nimport Canvas from '../index';\r\n\r\nconst TWO_PI = Math.PI * 2;\r\n\r\ninterface IInitialCircle {\r\n  x: number | string;\r\n  y: number | string;\r\n  radius: number | string;\r\n  fillStyle?: string;\r\n  drawType?: 'fill' | 'stroke';\r\n  alias?: string;\r\n}\r\nexport type ICircleState = Partial<Omit<IInitialCircle, 'alias'>>;\r\nclass Circle {\r\n  public id: string;\r\n  public alias: string;\r\n  public x: number | string;\r\n  public y: number | string;\r\n  public radius: number | string;\r\n  public fillStyle: string | undefined;\r\n  public drawType: 'fill' | 'stroke';\r\n  \r\n  static type = 'circle';\r\n\r\n  constructor({ x, y, radius, fillStyle, drawType, alias }: IInitialCircle) {\r\n    this.id = v4();\r\n    this.alias = alias || this.id;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.radius = radius;\r\n    this.fillStyle = fillStyle;\r\n    this.drawType = drawType || 'fill';\r\n  }\r\n\r\n  public setState (nextState: ICircleState) {\r\n    _each(nextState, (value, key) => {\r\n      _set(this, key, value);\r\n    });\r\n  }\r\n\r\n  public draw (canvas: Canvas) {\r\n    const { context: ctx, width, height } = canvas;\r\n    const x = percent2Number(this.x, width);\r\n    const y = percent2Number(this.y, height);\r\n    const r = percent2Number(this.radius, width);\r\n    ctx.save();\r\n    ctx.beginPath();\r\n    ctx.moveTo(x, y);\r\n    ctx.arc(x, y, r, 0, TWO_PI);\r\n    ctx.closePath();\r\n    if (this.fillStyle) {\r\n      ctx.fillStyle = this.fillStyle;\r\n    }\r\n    if (this.drawType === 'fill') {\r\n      ctx.fill();\r\n    } else {\r\n      ctx.stroke();\r\n    }\r\n    ctx.restore();\r\n  }\r\n}\r\n\r\nexport default Circle;\r\n","D:\\前端\\react基础架构\\bezier\\src\\Canvas\\Shape\\Rectangle.ts",["127"],"import { v4 } from 'uuid';\r\nimport _each from 'lodash/each';\r\nimport _set from 'lodash/set';\r\nimport _isFunction from 'lodash/isFunction';\r\nimport { percent2Number } from '../utils';\r\nimport Canvas from '../index';\r\n\r\ninterface IInitialRectangle {\r\n  x: number | string;\r\n  y: number | string;\r\n  width: number | string;\r\n  height: number | string;\r\n  fillStyle?: string;\r\n  drawType?: 'fill' | 'stroke';\r\n  alias?: string;\r\n}\r\nexport type IRectangleState = Partial<Omit<IInitialRectangle, 'alias'>>;\r\nclass Rectangle {\r\n  public id: string;\r\n  public alias: string;\r\n  public x: number | string;\r\n  public y: number | string;\r\n  public width: number | string;\r\n  public height: number | string;\r\n  public fillStyle: string | undefined;\r\n  public drawType: 'fill' | 'stroke';\r\n  \r\n  static type = 'rectangle';\r\n\r\n  constructor({ x, y, width, height, fillStyle, drawType, alias }: IInitialRectangle) {\r\n    this.id = v4();\r\n    this.alias = alias || this.id;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.fillStyle = fillStyle;\r\n    this.drawType = drawType || 'fill';\r\n  }\r\n\r\n  public setState (nextState: IRectangleState) {\r\n    _each(nextState, (value, key) => {\r\n      _set(this, key, value);\r\n    });\r\n  }\r\n\r\n  public draw (canvas: Canvas) {\r\n    const { context: ctx, width, height } = canvas;\r\n    const x = percent2Number(this.x, width);\r\n    const y = percent2Number(this.y, height);\r\n    const w = percent2Number(this.width, width);\r\n    const h = percent2Number(this.height, height);\r\n    ctx.save();\r\n    ctx.beginPath();\r\n    ctx.rect(x, y, w, h);\r\n    ctx.closePath();\r\n    if (this.fillStyle) {\r\n      ctx.fillStyle = this.fillStyle;\r\n    }\r\n    if (this.drawType === 'fill') {\r\n      ctx.fill();\r\n    } else {\r\n      ctx.stroke();\r\n    }\r\n    ctx.restore();\r\n  }\r\n}\r\n\r\nexport default Rectangle;\r\n","D:\\前端\\react基础架构\\bezier\\src\\Canvas\\utils.ts",[],{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":30,"column":11,"nodeType":"134","messageId":"135","endLine":30,"endColumn":24},{"ruleId":"132","severity":1,"message":"136","line":3,"column":15,"nodeType":"134","messageId":"135","endLine":3,"endColumn":18},{"ruleId":"132","severity":1,"message":"137","line":3,"column":28,"nodeType":"134","messageId":"135","endLine":3,"endColumn":42},{"ruleId":"132","severity":1,"message":"138","line":1,"column":28,"nodeType":"134","messageId":"135","endLine":1,"endColumn":35},{"ruleId":"132","severity":1,"message":"139","line":1,"column":45,"nodeType":"134","messageId":"135","endLine":1,"endColumn":53},{"ruleId":"132","severity":1,"message":"140","line":3,"column":8,"nodeType":"134","messageId":"135","endLine":3,"endColumn":14},{"ruleId":"132","severity":1,"message":"141","line":4,"column":10,"nodeType":"134","messageId":"135","endLine":4,"endColumn":13},{"ruleId":"132","severity":1,"message":"142","line":4,"column":15,"nodeType":"134","messageId":"135","endLine":4,"endColumn":21},{"ruleId":"132","severity":1,"message":"143","line":9,"column":8,"nodeType":"134","messageId":"135","endLine":9,"endColumn":24},{"ruleId":"132","severity":1,"message":"144","line":10,"column":8,"nodeType":"134","messageId":"135","endLine":10,"endColumn":24},{"ruleId":"132","severity":1,"message":"145","line":11,"column":8,"nodeType":"134","messageId":"135","endLine":11,"endColumn":20},{"ruleId":"132","severity":1,"message":"146","line":12,"column":10,"nodeType":"134","messageId":"135","endLine":12,"endColumn":18},{"ruleId":"132","severity":1,"message":"147","line":13,"column":10,"nodeType":"134","messageId":"135","endLine":13,"endColumn":30},{"ruleId":"132","severity":1,"message":"148","line":13,"column":32,"nodeType":"134","messageId":"135","endLine":13,"endColumn":54},{"ruleId":"132","severity":1,"message":"149","line":4,"column":8,"nodeType":"134","messageId":"135","endLine":4,"endColumn":19},{"ruleId":"132","severity":1,"message":"149","line":4,"column":8,"nodeType":"134","messageId":"135","endLine":4,"endColumn":19},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"@typescript-eslint/no-unused-vars","'initialPlayer' is assigned a value but never used.","Identifier","unusedVar","'map' is defined but never used.","'withLatestFrom' is defined but never used.","'useMemo' is defined but never used.","'useState' is defined but never used.","'_isNil' is defined but never used.","'tap' is defined but never used.","'filter' is defined but never used.","'useControlPoints' is defined but never used.","'useControlPlayer' is defined but never used.","'useMulticast' is defined but never used.","'DUE_TIME' is defined but never used.","'IDisplayStageOptions' is defined but never used.","'IDrawBallMotionOptions' is defined but never used.","'_isFunction' is defined but never used.","no-global-assign","no-unsafe-negation"]