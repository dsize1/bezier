[{"D:\\前端\\react基础架构\\bezier\\src\\index.tsx":"1","D:\\前端\\react基础架构\\bezier\\src\\reportWebVitals.ts":"2","D:\\前端\\react基础架构\\bezier\\src\\App.tsx":"3","D:\\前端\\react基础架构\\bezier\\src\\components\\ControlPoints\\index.tsx":"4","D:\\前端\\react基础架构\\bezier\\src\\models\\controlPoints.ts":"5","D:\\前端\\react基础架构\\bezier\\src\\components\\Stage\\index.tsx":"6","D:\\前端\\react基础架构\\bezier\\src\\utils\\index.ts":"7","D:\\前端\\react基础架构\\bezier\\src\\utils\\toFixed.ts":"8","D:\\前端\\react基础架构\\bezier\\src\\components\\ControlPoints\\InputRange.tsx":"9","D:\\前端\\react基础架构\\bezier\\src\\components\\Stage\\contants.ts":"10","D:\\前端\\react基础架构\\bezier\\src\\components\\Stage\\draws.ts":"11","D:\\前端\\react基础架构\\bezier\\src\\utils\\calculateBezier.ts":"12","D:\\前端\\react基础架构\\bezier\\src\\utils\\getStyleCls.ts":"13","D:\\前端\\react基础架构\\bezier\\src\\models\\controlPlayer.ts":"14","D:\\前端\\react基础架构\\bezier\\src\\utils\\p2CubicBezier.ts":"15","D:\\前端\\react基础架构\\bezier\\src\\components\\Compare\\index.tsx":"16","D:\\前端\\react基础架构\\bezier\\src\\hooks\\useResize.ts":"17","D:\\前端\\react基础架构\\bezier\\src\\hooks\\useMulticast.ts":"18","D:\\前端\\react基础架构\\bezier\\src\\utils\\getMotion$.ts":"19","D:\\前端\\react基础架构\\bezier\\src\\utils\\getCtxByStage.ts":"20","D:\\前端\\react基础架构\\bezier\\src\\utils\\drawPoint.ts":"21","D:\\前端\\react基础架构\\bezier\\src\\components\\Display\\index.tsx":"22"},{"size":500,"mtime":1607750933546,"results":"23","hashOfConfig":"24"},{"size":425,"mtime":1607745288397,"results":"25","hashOfConfig":"24"},{"size":790,"mtime":1608820477824,"results":"26","hashOfConfig":"24"},{"size":5905,"mtime":1608649875270,"results":"27","hashOfConfig":"24"},{"size":539,"mtime":1608649728969,"results":"28","hashOfConfig":"24"},{"size":2743,"mtime":1608473107975,"results":"29","hashOfConfig":"24"},{"size":723,"mtime":1608479620882,"results":"30","hashOfConfig":"24"},{"size":359,"mtime":1607757739271,"results":"31","hashOfConfig":"24"},{"size":1009,"mtime":1608044940771,"results":"32","hashOfConfig":"24"},{"size":430,"mtime":1608649541837,"results":"33","hashOfConfig":"24"},{"size":4153,"mtime":1608649993050,"results":"34","hashOfConfig":"24"},{"size":1055,"mtime":1608737060428,"results":"35","hashOfConfig":"24"},{"size":476,"mtime":1608047674449,"results":"36","hashOfConfig":"24"},{"size":429,"mtime":1608649868864,"results":"37","hashOfConfig":"24"},{"size":450,"mtime":1608382627893,"results":"38","hashOfConfig":"24"},{"size":1247,"mtime":1608649959108,"results":"39","hashOfConfig":"24"},{"size":1075,"mtime":1608650731883,"results":"40","hashOfConfig":"24"},{"size":1469,"mtime":1608652027482,"results":"41","hashOfConfig":"24"},{"size":2934,"mtime":1608648780842,"results":"42","hashOfConfig":"24"},{"size":202,"mtime":1608479298543,"results":"43","hashOfConfig":"24"},{"size":390,"mtime":1608479563649,"results":"44","hashOfConfig":"24"},{"size":3456,"mtime":1608820598976,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"j32ste",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\前端\\react基础架构\\bezier\\src\\index.tsx",[],["92","93"],"D:\\前端\\react基础架构\\bezier\\src\\reportWebVitals.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\App.tsx",[],"D:\\前端\\react基础架构\\bezier\\src\\components\\ControlPoints\\index.tsx",["94"],"import React, { useMemo } from 'react';\r\nimport { Form, Button, Select, Row, Col } from 'antd';\r\nimport { CopyrightTwoTone } from '@ant-design/icons';\r\nimport InputRange from './InputRange';\r\nimport _omit from 'lodash/omit';\r\nimport _split from 'lodash/split';\r\nimport _has from 'lodash/has';\r\nimport utils from '../../utils'\r\nimport { IControlPoints } from '../../models/controlPoints';\r\nimport useControlPoints from '../../models/controlPoints'\r\nimport useControlPlayer from '../../models/controlPlayer'\r\n\r\nconst libaray = [\r\n  { label: 'ease', value: '.25,.1,.25,1' },\r\n  { label: 'linear', value: '0,0,1,1' },\r\n  { label: 'ease-in', value: '.42,0,1,1' },\r\n  { label: 'ease-out', value: '0,0,.58,1' },\r\n  { label: 'ease-in-out', value: '.42,0,.58,1' }\r\n]\r\n\r\ninterface IForm extends IControlPoints {\r\n  libaray: string | undefined;\r\n  duration: number;\r\n}\r\n\r\nfunction ControlPoints(props: Partial<{ className: string }>) {\r\n  const { className } = props;\r\n\r\n  const { initialPoints, points, setPoints } = useControlPoints();\r\n  const { initialPlayer, player, setPlayer } = useControlPlayer();\r\n  const [form] = Form.useForm<IForm>();\r\n  const initialFormValues = useMemo(() => {\r\n    return {\r\n      libaray: undefined,\r\n      ...initialPoints,\r\n    }\r\n  }, [initialPoints])\r\n\r\n  const onFinish = (values: IForm, run = true) => {\r\n    if (!player.run) {\r\n      const nextPoints = _omit(values, ['libaray']);\r\n      setPoints(nextPoints);\r\n      setPlayer({ run });\r\n    }\r\n  }\r\n\r\n  const onReset = () => {\r\n    const formValues = {\r\n      ...initialPoints,\r\n      libaray: undefined\r\n    };\r\n    form.setFieldsValue(formValues);\r\n    onFinish(formValues, false);\r\n  }\r\n\r\n  const onFormChange = (changedValues: Partial<IForm>, allValues: IForm) => {\r\n    if (_has(changedValues, 'libaray')) {\r\n      if (changedValues.libaray === undefined) {\r\n        onReset();\r\n      } else {\r\n        const [cp1x, cp1y, cp2x, cp2y] = _split(changedValues.libaray, ',');\r\n        const formValues = {\r\n          duration: allValues.duration,\r\n          libaray: changedValues.libaray,\r\n          cp1x: Number(cp1x),\r\n          cp1y: Number(cp1y),\r\n          cp2x: Number(cp2x),\r\n          cp2y: Number(cp2y)\r\n        };\r\n        form.setFieldsValue(formValues);\r\n        onFinish(formValues, false);\r\n      }\r\n    } else {\r\n      const formValues = {\r\n        ...allValues,\r\n        libaray: undefined\r\n      };\r\n      form.setFieldsValue(formValues);\r\n      onFinish(formValues, false);\r\n    }\r\n  }\r\n\r\n  const bezierCurve = useMemo(() => {\r\n    return utils.p2CubicBezier(points);\r\n  }, [points]);\r\n\r\n  return (\r\n    <Form\r\n      className={className}\r\n      form={form} \r\n      initialValues={initialFormValues} \r\n      name=\"control-points\" \r\n      onFinish={onFinish} \r\n      onValuesChange={onFormChange}\r\n      labelCol={{ span: 8 }}\r\n      wrapperCol={{ span: 16 }}\r\n    >\r\n      <Row justify=\"start\" >\r\n        <Col span={10}>\r\n          <Form.Item\r\n            name=\"cp1x\"\r\n            label={\r\n              <span>\r\n                控制点X1\r\n                <CopyrightTwoTone twoToneColor=\"#52c41a\" style={{marginLeft: 6}} />\r\n              </span>\r\n            }\r\n            rules={[{ required: true }]}\r\n          >\r\n            <InputRange min={0} max={1} step={0.01} />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col span={10}>\r\n          <Form.Item\r\n            name=\"cp1y\"\r\n            label={\r\n              <span>\r\n                控制点Y1\r\n                <CopyrightTwoTone twoToneColor=\"#52c41a\" style={{marginLeft: 6}} />\r\n              </span>\r\n            }\r\n            rules={[{ required: true }]}\r\n          >\r\n            <InputRange min={-1} max={2} step={0.01} />\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n      <Row justify=\"start\" >\r\n        <Col span={10}>\r\n          <Form.Item\r\n            name=\"cp2x\"\r\n            label={\r\n              <span>\r\n                控制点X2\r\n                <CopyrightTwoTone twoToneColor=\"#ff5722\" style={{marginLeft: 6}} />\r\n              </span>\r\n            }\r\n            rules={[{ required: true }]}\r\n          >\r\n            <InputRange min={0} max={1} step={0.01} />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col span={10}>\r\n          <Form.Item\r\n            name=\"cp2y\"\r\n            label={\r\n              <span>\r\n                控制定Y2\r\n                <CopyrightTwoTone twoToneColor=\"#ff5722\" style={{marginLeft: 6}} />\r\n              </span>\r\n            }\r\n            rules={[{ required: true }]}\r\n          >\r\n            <InputRange min={-1} max={2} step={0.01} />\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n      <Row justify=\"start\" >\r\n        <Col span={10}>\r\n          <Form.Item\r\n            name=\"libaray\"\r\n            label=\"缓动函数\"\r\n          >\r\n            <Select\r\n              size=\"small\"\r\n              style={{ width: 200 }}\r\n              options={libaray}\r\n              optionLabelProp=\"label\"\r\n              allowClear\r\n            />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col span={10}>\r\n          <Form.Item\r\n            name=\"duration\"\r\n            label=\"时间\"\r\n            rules={[{ required: true }]}\r\n          >\r\n            <InputRange min={initialPoints.duration} max={10000} step={500} />\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n      <Row justify=\"start\" >        \r\n        <Col span={10}>\r\n          <Form.Item label=\"贝塞尔曲线\">\r\n            <span>{bezierCurve}</span>\r\n          </Form.Item>\r\n        </Col>\r\n        <Col span={10} offset={4} >\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              开始\r\n            </Button>\r\n            <Button style={{ marginLeft: 12 }} htmlType=\"button\" onClick={onReset}>\r\n              重置\r\n            </Button>\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default ControlPoints;\r\n","D:\\前端\\react基础架构\\bezier\\src\\models\\controlPoints.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\components\\Stage\\index.tsx",[],"D:\\前端\\react基础架构\\bezier\\src\\utils\\index.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\utils\\toFixed.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\components\\ControlPoints\\InputRange.tsx",[],"D:\\前端\\react基础架构\\bezier\\src\\components\\Stage\\contants.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\components\\Stage\\draws.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\utils\\calculateBezier.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\utils\\getStyleCls.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\models\\controlPlayer.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\utils\\p2CubicBezier.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\components\\Compare\\index.tsx",[],"D:\\前端\\react基础架构\\bezier\\src\\hooks\\useResize.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\hooks\\useMulticast.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\utils\\getMotion$.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\utils\\getCtxByStage.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\utils\\drawPoint.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\components\\Display\\index.tsx",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":30,"column":11,"nodeType":"101","messageId":"102","endLine":30,"endColumn":24},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"@typescript-eslint/no-unused-vars","'initialPlayer' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]