[{"D:\\前端\\react基础架构\\bezier\\src\\index.tsx":"1","D:\\前端\\react基础架构\\bezier\\src\\reportWebVitals.ts":"2","D:\\前端\\react基础架构\\bezier\\src\\App.tsx":"3","D:\\前端\\react基础架构\\bezier\\src\\components\\ControlPoints\\index.tsx":"4","D:\\前端\\react基础架构\\bezier\\src\\models\\controlPoints.ts":"5","D:\\前端\\react基础架构\\bezier\\src\\components\\Stage\\index.tsx":"6","D:\\前端\\react基础架构\\bezier\\src\\utils\\index.ts":"7","D:\\前端\\react基础架构\\bezier\\src\\utils\\toFixed.ts":"8","D:\\前端\\react基础架构\\bezier\\src\\components\\ControlPoints\\InputRange.tsx":"9","D:\\前端\\react基础架构\\bezier\\src\\components\\Stage\\contants.ts":"10","D:\\前端\\react基础架构\\bezier\\src\\components\\Stage\\draws.ts":"11","D:\\前端\\react基础架构\\bezier\\src\\utils\\calculateBezier.ts":"12","D:\\前端\\react基础架构\\bezier\\src\\utils\\getStyleCls.ts":"13","D:\\前端\\react基础架构\\bezier\\src\\models\\controlPlayer.ts":"14","D:\\前端\\react基础架构\\bezier\\src\\utils\\p2CubicBezier.ts":"15","D:\\前端\\react基础架构\\bezier\\src\\components\\Compare\\index.tsx":"16","D:\\前端\\react基础架构\\bezier\\src\\hooks\\useResize.ts":"17","D:\\前端\\react基础架构\\bezier\\src\\hooks\\useMulticast.ts":"18","D:\\前端\\react基础架构\\bezier\\src\\utils\\getMotion$.ts":"19","D:\\前端\\react基础架构\\bezier\\src\\utils\\getCtxByStage.ts":"20","D:\\前端\\react基础架构\\bezier\\src\\utils\\drawPoint.ts":"21","D:\\前端\\react基础架构\\bezier\\src\\components\\Display\\index.tsx":"22","D:\\前端\\react基础架构\\bezier\\src\\Canvas\\index.ts":"23","D:\\前端\\react基础架构\\bezier\\src\\Canvas\\Shape\\Circle.ts":"24","D:\\前端\\react基础架构\\bezier\\src\\Canvas\\Shape\\Rectangle.ts":"25","D:\\前端\\react基础架构\\bezier\\src\\utils\\cubicBezier2p.ts":"26","D:\\前端\\react基础架构\\bezier\\src\\Canvas\\utils\\Movement.ts":"27","D:\\前端\\react基础架构\\bezier\\src\\Canvas\\utils\\getMovements$.ts":"28","D:\\前端\\react基础架构\\bezier\\src\\Canvas\\utils\\getAbsolutePosition.ts":"29","D:\\前端\\react基础架构\\bezier\\src\\pages\\Quadtree\\index.tsx":"30","D:\\前端\\react基础架构\\bezier\\src\\utils\\random.ts":"31","D:\\前端\\react基础架构\\bezier\\src\\Canvas\\utils\\Shapes.ts":"32"},{"size":500,"mtime":1607750933546,"results":"33","hashOfConfig":"34"},{"size":425,"mtime":1607745288397,"results":"35","hashOfConfig":"34"},{"size":302,"mtime":1611581752519,"results":"36","hashOfConfig":"34"},{"size":6000,"mtime":1610213019139,"results":"37","hashOfConfig":"34"},{"size":635,"mtime":1610203710086,"results":"38","hashOfConfig":"34"},{"size":2809,"mtime":1609257336242,"results":"39","hashOfConfig":"34"},{"size":830,"mtime":1611582711636,"results":"40","hashOfConfig":"34"},{"size":359,"mtime":1607757739271,"results":"41","hashOfConfig":"34"},{"size":1009,"mtime":1608044940771,"results":"42","hashOfConfig":"34"},{"size":430,"mtime":1608649541837,"results":"43","hashOfConfig":"34"},{"size":4153,"mtime":1608649993050,"results":"44","hashOfConfig":"34"},{"size":761,"mtime":1610192228946,"results":"45","hashOfConfig":"34"},{"size":476,"mtime":1608047674449,"results":"46","hashOfConfig":"34"},{"size":429,"mtime":1608649868864,"results":"47","hashOfConfig":"34"},{"size":491,"mtime":1610204135818,"results":"48","hashOfConfig":"34"},{"size":1247,"mtime":1608649959108,"results":"49","hashOfConfig":"34"},{"size":1031,"mtime":1608990596266,"results":"50","hashOfConfig":"34"},{"size":1469,"mtime":1608652027482,"results":"51","hashOfConfig":"34"},{"size":2952,"mtime":1610189413933,"results":"52","hashOfConfig":"34"},{"size":202,"mtime":1608479298543,"results":"53","hashOfConfig":"34"},{"size":390,"mtime":1608479563649,"results":"54","hashOfConfig":"34"},{"size":3075,"mtime":1610215173010,"results":"55","hashOfConfig":"34"},{"size":5816,"mtime":1611760083922,"results":"56","hashOfConfig":"34"},{"size":2397,"mtime":1611244590480,"results":"57","hashOfConfig":"34"},{"size":2442,"mtime":1611244538882,"results":"58","hashOfConfig":"34"},{"size":1353,"mtime":1610215094310,"results":"59","hashOfConfig":"34"},{"size":922,"mtime":1610210859947,"results":"60","hashOfConfig":"34"},{"size":4826,"mtime":1611242314302,"results":"61","hashOfConfig":"34"},{"size":735,"mtime":1610195050301,"results":"62","hashOfConfig":"34"},{"size":2424,"mtime":1611589618434,"results":"63","hashOfConfig":"34"},{"size":129,"mtime":1611582838952,"results":"64","hashOfConfig":"34"},{"size":11612,"mtime":1611757032192,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"j32ste",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"76"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"76"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"68"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\前端\\react基础架构\\bezier\\src\\index.tsx",[],["136","137"],"D:\\前端\\react基础架构\\bezier\\src\\reportWebVitals.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\App.tsx",[],"D:\\前端\\react基础架构\\bezier\\src\\components\\ControlPoints\\index.tsx",["138"],"import React, { useMemo } from 'react';\r\nimport { Form, Button, Select, Row, Col } from 'antd';\r\nimport { CopyrightTwoTone } from '@ant-design/icons';\r\nimport InputRange from './InputRange';\r\nimport _omit from 'lodash/omit';\r\nimport _split from 'lodash/split';\r\nimport _map from 'lodash/map';\r\nimport _has from 'lodash/has';\r\nimport utils from '../../utils'\r\nimport { IControlPoints } from '../../models/controlPoints';\r\nimport useControlPoints from '../../models/controlPoints'\r\nimport useControlPlayer from '../../models/controlPlayer'\r\n\r\nconst libaray = [\r\n  { label: 'ease', value: '.25,.1,.25,1' },\r\n  { label: 'linear', value: '0,0,1,1' },\r\n  { label: 'ease-in', value: '.42,0,1,1' },\r\n  { label: 'ease-out', value: '0,0,.58,1' },\r\n  { label: 'ease-in-out', value: '.42,0,.58,1' }\r\n]\r\n\r\ninterface IForm extends Omit<IControlPoints, 'cubicBezier'> {\r\n  libaray: string | undefined;\r\n  duration: number;\r\n}\r\n\r\nfunction ControlPoints(props: Partial<{ className: string }>) {\r\n  const { className } = props;\r\n\r\n  const { initialPoints, points, setPoints } = useControlPoints();\r\n  const { initialPlayer, player, setPlayer } = useControlPlayer();\r\n  const [form] = Form.useForm<IForm>();\r\n  const initialFormValues = useMemo(() => {\r\n    return {\r\n      libaray: undefined,\r\n      ...initialPoints,\r\n    }\r\n  }, [initialPoints])\r\n\r\n  const onFinish = (values: IForm, run = true) => {\r\n    if (!player.run) {\r\n      const nextPoints = _omit(values, ['libaray']);\r\n      const { cp1x, cp1y, cp2x, cp2y } = nextPoints;\r\n      const cubicBezier = utils.p2CubicBezier({ cp1x, cp1y, cp2x, cp2y });\r\n      setPoints({ ...nextPoints, cubicBezier });\r\n      setPlayer({ run });\r\n    }\r\n  }\r\n\r\n  const onReset = () => {\r\n    const formValues = {\r\n      ...initialPoints,\r\n      libaray: undefined\r\n    };\r\n    form.setFieldsValue(formValues);\r\n    onFinish(formValues, false);\r\n  }\r\n\r\n  const onFormChange = (changedValues: Partial<IForm>, allValues: IForm) => {\r\n    if (_has(changedValues, 'libaray')) {\r\n      if (changedValues.libaray === undefined) {\r\n        onReset();\r\n      } else {\r\n        const cps = _split(changedValues.libaray, ',');\r\n        const [cp1x, cp1y, cp2x, cp2y] = _map(cps, Number);\r\n        const formValues = {\r\n          duration: allValues.duration,\r\n          libaray: changedValues.libaray,\r\n          cp1x,\r\n          cp1y,\r\n          cp2x,\r\n          cp2y\r\n        };\r\n        form.setFieldsValue(formValues);\r\n        onFinish(formValues, false);\r\n      }\r\n    } else {\r\n      const formValues = {\r\n        ...allValues,\r\n        libaray: undefined\r\n      };\r\n      form.setFieldsValue(formValues);\r\n      onFinish(formValues, false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Form\r\n      className={className}\r\n      form={form} \r\n      initialValues={initialFormValues} \r\n      name=\"control-points\" \r\n      onFinish={onFinish} \r\n      onValuesChange={onFormChange}\r\n      labelCol={{ span: 8 }}\r\n      wrapperCol={{ span: 16 }}\r\n    >\r\n      <Row justify=\"start\" >\r\n        <Col span={10}>\r\n          <Form.Item\r\n            name=\"cp1x\"\r\n            label={\r\n              <span>\r\n                控制点X1\r\n                <CopyrightTwoTone twoToneColor=\"#52c41a\" style={{marginLeft: 6}} />\r\n              </span>\r\n            }\r\n            rules={[{ required: true }]}\r\n          >\r\n            <InputRange min={0} max={1} step={0.01} />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col span={10}>\r\n          <Form.Item\r\n            name=\"cp1y\"\r\n            label={\r\n              <span>\r\n                控制点Y1\r\n                <CopyrightTwoTone twoToneColor=\"#52c41a\" style={{marginLeft: 6}} />\r\n              </span>\r\n            }\r\n            rules={[{ required: true }]}\r\n          >\r\n            <InputRange min={-1} max={2} step={0.01} />\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n      <Row justify=\"start\" >\r\n        <Col span={10}>\r\n          <Form.Item\r\n            name=\"cp2x\"\r\n            label={\r\n              <span>\r\n                控制点X2\r\n                <CopyrightTwoTone twoToneColor=\"#ff5722\" style={{marginLeft: 6}} />\r\n              </span>\r\n            }\r\n            rules={[{ required: true }]}\r\n          >\r\n            <InputRange min={0} max={1} step={0.01} />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col span={10}>\r\n          <Form.Item\r\n            name=\"cp2y\"\r\n            label={\r\n              <span>\r\n                控制定Y2\r\n                <CopyrightTwoTone twoToneColor=\"#ff5722\" style={{marginLeft: 6}} />\r\n              </span>\r\n            }\r\n            rules={[{ required: true }]}\r\n          >\r\n            <InputRange min={-1} max={2} step={0.01} />\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n      <Row justify=\"start\" >\r\n        <Col span={10}>\r\n          <Form.Item\r\n            name=\"libaray\"\r\n            label=\"缓动函数\"\r\n          >\r\n            <Select\r\n              size=\"small\"\r\n              style={{ width: 200 }}\r\n              options={libaray}\r\n              optionLabelProp=\"label\"\r\n              allowClear\r\n            />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col span={10}>\r\n          <Form.Item\r\n            name=\"duration\"\r\n            label=\"时间\"\r\n            rules={[{ required: true }]}\r\n          >\r\n            <InputRange min={initialPoints.duration} max={10000} step={500} />\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n      <Row justify=\"start\" >        \r\n        <Col span={10}>\r\n          <Form.Item label=\"贝塞尔曲线\">\r\n            <span>{points.cubicBezier}</span>\r\n          </Form.Item>\r\n        </Col>\r\n        <Col span={10} offset={4} >\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              开始\r\n            </Button>\r\n            <Button style={{ marginLeft: 12 }} htmlType=\"button\" onClick={onReset}>\r\n              重置\r\n            </Button>\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default ControlPoints;\r\n",["139","140"],"D:\\前端\\react基础架构\\bezier\\src\\models\\controlPoints.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\components\\Stage\\index.tsx",["141","142"],"import React, { useMemo, useRef } from 'react';\r\nimport { of, concat } from 'rxjs';\r\nimport { tap, map, filter, withLatestFrom } from 'rxjs/operators';\r\nimport useResize from '../../hooks/useResize';\r\nimport useControlPoints from '../../models/controlPoints';\r\nimport useControlPlayer from '../../models/controlPlayer';\r\nimport useMulticast from '../../hooks/useMulticast';\r\nimport { drawCoordinates, drawBezierCurvePoint, getPoints$ } from './draws';\r\nimport { PADDING } from './contants';\r\nimport { IStageOptions, IDrawCoordinatesOptions, IDrawBezierCurveOptions } from './types';\r\n\r\nfunction Stage (props: Partial<{ className: string }>) {\r\n  const { className } = props;\r\n\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n\r\n  const { width, height } = useResize(containerRef.current);\r\n\r\n  const { points: controlPonitsOptions } = useControlPoints();\r\n  const { player: controlPlayer, setPlayer: setControlPonitsPlayer } = useControlPlayer();\r\n\r\n  const stageOptions: IStageOptions = useMemo(() => {\r\n    const _width = Math.floor(width);\r\n    const _height = Math.floor(height);\r\n    const axisXLength = Math.floor(_width - (2 * PADDING));\r\n    const axisYLength = Math.floor((1 / 3)  * (_height - (2 * PADDING)));\r\n    const originX = PADDING;\r\n    const originY = 2 * axisYLength + PADDING;\r\n\r\n    return {\r\n      x0: originX,\r\n      y0: originY,\r\n      xLen: axisXLength,\r\n      yLen: axisYLength,\r\n      stageW: _width,\r\n      stageH: _height,\r\n      stage: canvasRef\r\n    };\r\n  }, [width, height]);\r\n\r\n  const drawBezierCurve = ([stageOptions, controlPonits, controlPlayer]: IDrawBezierCurveOptions) => {\r\n    console.log('ddd', controlPlayer);\r\n    const clear$ = of<IDrawCoordinatesOptions>([stageOptions, controlPonits]).pipe(\r\n      tap(drawCoordinates)\r\n    );\r\n    const drawPoints$ = getPoints$(stageOptions, controlPonits, controlPlayer).pipe(\r\n      tap(drawBezierCurvePoint)\r\n    );\r\n    const draw$ = concat(clear$, drawPoints$);\r\n    draw$.subscribe({\r\n      complete: () => {\r\n        setControlPonitsPlayer({ ...controlPlayer, run: false });\r\n      },\r\n      error: () => {\r\n        setControlPonitsPlayer({ ...controlPlayer, run: false });\r\n      }\r\n    });\r\n  }\r\n\r\n  useMulticast<IDrawCoordinatesOptions>(\r\n    [drawCoordinates],\r\n    [stageOptions, controlPonitsOptions]\r\n  );\r\n\r\n  useMulticast<IDrawBezierCurveOptions>(\r\n    [drawBezierCurve],\r\n    [stageOptions, controlPonitsOptions, controlPlayer],\r\n    (dependency$) => {\r\n      return dependency$.pipe(\r\n        filter((dep) => dep[2].run)\r\n      );\r\n    }\r\n  );\r\n\r\n  return (\r\n    <div className={className} ref={containerRef}>\r\n      <canvas ref={canvasRef} width={stageOptions.stageW} height={stageOptions.stageH} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Stage;\r\n","D:\\前端\\react基础架构\\bezier\\src\\utils\\index.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\utils\\toFixed.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\components\\ControlPoints\\InputRange.tsx",[],"D:\\前端\\react基础架构\\bezier\\src\\components\\Stage\\contants.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\components\\Stage\\draws.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\utils\\calculateBezier.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\utils\\getStyleCls.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\models\\controlPlayer.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\utils\\p2CubicBezier.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\components\\Compare\\index.tsx",[],"D:\\前端\\react基础架构\\bezier\\src\\hooks\\useResize.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\hooks\\useMulticast.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\utils\\getMotion$.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\utils\\getCtxByStage.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\utils\\drawPoint.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\components\\Display\\index.tsx",["143","144","145","146"],"import React, { useEffect, useMemo, useRef, useState } from 'react';\r\nimport useConstant from 'use-constant';\r\nimport { tap, filter } from 'rxjs/operators';\r\nimport { useObservable } from \"rxjs-hooks\";\r\nimport utils from '../../utils';\r\nimport getAbsolutePosition from '../../Canvas/utils/getAbsolutePosition';\r\nimport Canvas from '../../Canvas';\r\nimport Circle from '../../Canvas/Shape/Circle';\r\nimport Rectangle from '../../Canvas/Shape/Rectangle';\r\nimport useControlPoints from '../../models/controlPoints';\r\nimport useControlPlayer from '../../models/controlPlayer';\r\nimport { DUE_TIME } from '../Stage/contants';\r\nimport { IDrawBallMotionOptions } from './types';\r\nimport { IPoint } from '../../types';\r\nimport styles from './display.module.css';\r\n\r\nconst getCls = utils.getStyleCls(styles);\r\n\r\nconst BALL_RADIUS = 12.5;\r\nconst BALL_BOTTOM = 756;\r\nconst BALL_TOP = 181;\r\nconst BALL_COLOR = '#d87093';\r\nconst RECT_HEIGHT = 600;\r\nconst RECT_COLOR = '#ffffff';\r\nconst RECT = {\r\n  x: 0,\r\n  y: 168.5,\r\n  width: '100%',\r\n  height: RECT_HEIGHT,\r\n  fillStyle: RECT_COLOR \r\n};\r\nconst BALL = {\r\n  x: 84,\r\n  y: 756,\r\n  radius: BALL_RADIUS,\r\n  fillStyle: BALL_COLOR\r\n};\r\n\r\nfunction Display() {\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const canvasRef = useRef<Canvas>();\r\n  const rect = useConstant(() => new Rectangle({\r\n    ...RECT,\r\n    width: 0\r\n  }));\r\n  const ball = useConstant(() => new Circle(BALL));\r\n\r\n  useEffect(() => {\r\n    if (containerRef.current) {\r\n      canvasRef.current = new Canvas(containerRef.current);\r\n      canvasRef?.current?.init(\r\n        (canvasSize, context, canvas) => {\r\n          canvas.append(rect.id, rect);\r\n          canvas.append(ball.id, ball);\r\n          const rectWidth = getAbsolutePosition(RECT.width, 'width', canvasSize);\r\n          canvas.change(rect.id, { width: rectWidth });\r\n          canvas.drawShapes();\r\n        }\r\n      );\r\n    }\r\n    return () => {\r\n      canvasRef?.current?.destroy();\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const { points: controlPonits } = useControlPoints();\r\n  const { player: controlPlayer } = useControlPlayer();\r\n\r\n  useObservable((_, inputs$) => inputs$.pipe(\r\n    filter((inputs) => {\r\n      const isInitiated = canvasRef?.current?.isInitiated ?? false;\r\n      const run = inputs[1].run;\r\n      return isInitiated && run;\r\n    }),\r\n    tap(([controlPonitsOptions]) => {\r\n      const endY = ball.y === BALL_BOTTOM ? BALL_TOP : BALL_BOTTOM;\r\n      const unit = {\r\n        shape: ball,\r\n        state: { y: endY },\r\n        cubicBezier: controlPonitsOptions.cubicBezier,\r\n        delay: DUE_TIME,\r\n        duration: controlPonitsOptions.duration\r\n      };\r\n      canvasRef?.current?.move(\r\n        unit,\r\n        {\r\n          moving: (_, canvas) => {\r\n            canvas.clear();\r\n            canvas.drawShapes();\r\n          }\r\n        }\r\n      );\r\n    }),\r\n  ), [controlPonits, controlPlayer], [controlPonits, controlPlayer])\r\n\r\n  return (\r\n    <div className={getCls('container')} ref={containerRef} />\r\n  );\r\n}\r\n\r\nexport default Display;\r\n","D:\\前端\\react基础架构\\bezier\\src\\Canvas\\index.ts",["147"],"D:\\前端\\react基础架构\\bezier\\src\\Canvas\\Shape\\Circle.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\Canvas\\Shape\\Rectangle.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\utils\\cubicBezier2p.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\Canvas\\utils\\Movement.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\Canvas\\utils\\getMovements$.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\Canvas\\utils\\getAbsolutePosition.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\pages\\Quadtree\\index.tsx",["148","149"],"import React, { useRef, useEffect, useState, useCallback } from 'react';\r\nimport { Button } from 'antd';\r\nimport Canvas from '../../Canvas';\r\nimport Circle from '../../Canvas/Shape/Circle';\r\nimport Rectangle from '../../Canvas/Shape/Rectangle';\r\nimport utils from '../../utils';\r\nimport styles from './style.module.css';\r\n\r\nconst getCls = utils.getStyleCls(styles);\r\n\r\nconst RECTANGLE_COLOR = '#4169e1';\r\nconst CIRCLE_COLOR = '#d87093';\r\n\r\nconst getRectParams = (w: number, h: number) => {\r\n  const x = utils.random(0, w);\r\n  const y = utils.random(0, h);\r\n  const width = utils.random(\r\n    Math.round(w/50),\r\n    Math.round(w/100)\r\n  );\r\n  const height = utils.random(\r\n    Math.round(h/50),\r\n    Math.round(h/100)\r\n  );\r\n  return { x, y, width, height, fillStyle: RECTANGLE_COLOR };\r\n}\r\n\r\nconst getCircleParams = (w: number, h: number) => {\r\n  const x = utils.random(0, w);\r\n  const y = utils.random(0, h);\r\n  const radius = utils.random(\r\n    Math.round(w/50),\r\n    Math.round(w/100)\r\n  );\r\n  return { x, y, radius, fillStyle: CIRCLE_COLOR };\r\n}\r\n\r\nconst Quadtree = () => {\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const canvasRef = useRef<Canvas>();\r\n\r\n  const addRect = () => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return;\r\n    const rectParams = getRectParams(canvas.width, canvas.height);\r\n    const rect = new Rectangle(rectParams);\r\n    canvas.append(rect.id, rect);\r\n    canvas.test();\r\n  };\r\n\r\n  const addCircle = () => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return;\r\n    const circleParams = getCircleParams(canvas.width, canvas.height);\r\n    const circle = new Circle(circleParams);\r\n    canvas.append(circle.id, circle);\r\n    canvas.test();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (containerRef.current) {\r\n      canvasRef.current = new Canvas(containerRef.current);\r\n    }\r\n    return () => {\r\n      canvasRef?.current?.destroy();\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <div className={getCls('container')}>\r\n      <div className={getCls('stage')} ref={containerRef}/>\r\n      <div className={getCls('controller')}>\r\n        <Button onClick={addRect} type=\"primary\">\r\n          添加矩形\r\n        </Button>\r\n        <Button onClick={addCircle} type=\"primary\" style={{ marginLeft: 12 }} >\r\n          添加圆型\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quadtree;\r\n","D:\\前端\\react基础架构\\bezier\\src\\utils\\random.ts",[],"D:\\前端\\react基础架构\\bezier\\src\\Canvas\\utils\\Shapes.ts",["150"],{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":31,"column":11,"nodeType":"157","messageId":"158","endLine":31,"endColumn":24},{"ruleId":"151","replacedBy":"159"},{"ruleId":"153","replacedBy":"160"},{"ruleId":"155","severity":1,"message":"161","line":3,"column":15,"nodeType":"157","messageId":"158","endLine":3,"endColumn":18},{"ruleId":"155","severity":1,"message":"162","line":3,"column":28,"nodeType":"157","messageId":"158","endLine":3,"endColumn":42},{"ruleId":"155","severity":1,"message":"163","line":1,"column":28,"nodeType":"157","messageId":"158","endLine":1,"endColumn":35},{"ruleId":"155","severity":1,"message":"164","line":1,"column":45,"nodeType":"157","messageId":"158","endLine":1,"endColumn":53},{"ruleId":"155","severity":1,"message":"165","line":13,"column":10,"nodeType":"157","messageId":"158","endLine":13,"endColumn":32},{"ruleId":"155","severity":1,"message":"166","line":14,"column":10,"nodeType":"157","messageId":"158","endLine":14,"endColumn":16},{"ruleId":"155","severity":1,"message":"167","line":12,"column":59,"nodeType":"157","messageId":"158","endLine":12,"endColumn":69},{"ruleId":"155","severity":1,"message":"164","line":1,"column":36,"nodeType":"157","messageId":"158","endLine":1,"endColumn":44},{"ruleId":"155","severity":1,"message":"168","line":1,"column":46,"nodeType":"157","messageId":"158","endLine":1,"endColumn":57},{"ruleId":"155","severity":1,"message":"169","line":1,"column":8,"nodeType":"157","messageId":"158","endLine":1,"endColumn":16},"no-native-reassign",["170"],"no-negated-in-lhs",["171"],"@typescript-eslint/no-unused-vars","'initialPlayer' is assigned a value but never used.","Identifier","unusedVar",["170"],["171"],"'map' is defined but never used.","'withLatestFrom' is defined but never used.","'useMemo' is defined but never used.","'useState' is defined but never used.","'IDrawBallMotionOptions' is defined but never used.","'IPoint' is defined but never used.","'ShapeState' is defined but never used.","'useCallback' is defined but never used.","'_toPairs' is defined but never used.","no-global-assign","no-unsafe-negation"]